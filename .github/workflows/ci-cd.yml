  # This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
  # For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven
  name: project cicd flow
  on:
    push:
      branches: [ master ]
    pull_request:
      branches: [ master ]
  jobs:
    build:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v2
        - name: Set up JDK 11
          uses: actions/setup-java@v1
          with:
            java-version: '11'
            distribution: 'adopt'
            cache: maven
        - name: Build with Maven
          run: mvn clean install
        - name: Build & push Docker image
          uses: mr-smithers-excellent/docker-build-push@v5
          with:
            image: rajmcaitm/springbootcrudwithsplunkintegration-images
            tags: latest
            registry: docker.io
            dockerfile: Dockerfile
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}
    test:
      runs-on: ubuntu-latest
      #needs: build
      steps:
        - name: Checkout code
          uses: actions/checkout@v2
        - name: Set up JDK 11
          uses: actions/setup-java@v2
          with:
            java-version: '11'
            distribution: 'adopt'

        - name: Run tests
          run: mvn test
    integration-test:
      runs-on: ubuntu-latest
      #needs: test

      steps:
        - name: Checkout code
          uses: actions/checkout@v2

        - name: Set up JDK 11
          uses: actions/setup-java@v2
          with:
            java-version: '11'
            distribution: 'adopt'

        - name: Run integration tests
          run: mvn verify

    deploy:
      runs-on: ubuntu-latest
      #needs: integration-test

      steps:
        - name: Checkout code
          uses: actions/checkout@v2

        - name: Set up JDK 11
          uses: actions/setup-java@v2
          with:
              java-version: '11'
              distribution: 'adopt'

        - name: Deploy to production
          run: echo "Deploying to production"
        - name: Deploy to GitHub Container Registry
          uses: docker/login-action@v1
          with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}
        - name: Build and push image
          uses: docker/build-push-action@v2
          with:
            context: .
            push: true
            tags: ${{ secrets.DOCKER_USERNAME }}/spring-boot-crud-splunk-integration:latest

